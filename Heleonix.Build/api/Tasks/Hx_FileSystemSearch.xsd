<?xml version="1.0" encoding="utf-8"?>

<!--
Example custom task with single required parameter
<xs:element name="MyTask" substitutionGroup="msb:Task">
  <xs:complexType>
    <xs:complexContent>
      <xs:extension base="msb:TaskType">
        <xs:attribute name="MyParameter" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
</xs:element>
-->

<xs:schema xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003"
           elementFormDefault="qualified"
           targetNamespace="http://schemas.microsoft.com/developer/msbuild/2003"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="Hx_FileSystemSearch" substitutionGroup="msb:Task">
    <xs:annotation>
      <xs:documentation>Searches items in the file system.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="msb:TaskType">
          <xs:attribute name="StartDir" use="required">
            <xs:annotation>
              <xs:documentation>The directory to start from, including that directory.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Direction">
            <xs:annotation>
              <xs:documentation>The search direction: 'Up', 'Down'. Default is 'Down'.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Types">
            <xs:annotation>
              <xs:documentation>Types of items to search: 'Files', 'Directories', 'All'. Default is 'All'.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Files"/>
                <xs:enumeration value="Directories"/>
                <xs:enumeration value="All"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="PathRegExp">
            <xs:annotation>
              <xs:documentation>
                The .NET regular expression to include found paths. Use only '/' for path separators.
                If 'Direction' is 'Down', then this regular expression is evaluated against the path starting from
                the 'StartDir.
                I.e. if 'StartDir' is 'D:/Dev/Repo' and the checked folder is 'D:/Dev/Repo/sub/folder',
                then the regular expression is executed against '/sub/folder', so the 'StartDir' is trimmed.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="PathRegExpOptions">
            <xs:annotation>
              <xs:documentation>The .NET regular expression options to include found paths. Default is 'IgnoreCase'.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ContentRegExp">
            <xs:annotation>
              <xs:documentation>The .NET regular expression to search items by content.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ContentRegExpOptions">
            <xs:annotation>
              <xs:documentation>The .NET regular expression options to search items by content. Default is 'IgnoreCase'.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="FoundFiles">
            <xs:annotation>
              <xs:documentation>The found files [Output].</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="FoundDirs">
            <xs:annotation>
              <xs:documentation>The found directories [Output].</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="FoundItems">
            <xs:annotation>
              <xs:documentation>All the found items (files and/or directories, depending on the 'Types') [Output].</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
</xs:schema>
