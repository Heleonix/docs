<?xml version="1.0" encoding="utf-8"?>

<!--
Example custom task with single required parameter
<xs:element name="MyTask" substitutionGroup="msb:Task">
  <xs:complexType>
    <xs:complexContent>
      <xs:extension base="msb:TaskType">
        <xs:attribute name="MyParameter" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
</xs:element>
-->

<xs:schema xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003"
           elementFormDefault="qualified"
           targetNamespace="http://schemas.microsoft.com/developer/msbuild/2003"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="Hx_FileRazorGenerate" substitutionGroup="msb:Task">
    <xs:annotation>
      <xs:documentation>
        Generates a file using the passed Razor template file and passed list of data items.
        Example:
        @using System
        @using Microsoft.Build.Framework
        @inherits RazorEngineCore.RazorEngineTemplateBase&lt;ITaskItem[]&gt;
        @DateTime.UtcNow.ToShortDateString()
        @foreach (var item in Model)
        {
             &lt;text&gt;- &lt;/text&gt; @item.GetMetadata("description")
             @:
        }
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="msb:TaskType">
          <xs:attribute name="TemplateFile" use="required">
            <xs:annotation>
              <xs:documentation>Path to the Razor *.cshtml template file.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="GeneratedFile" use="required">
            <xs:annotation>
              <xs:documentation>Path of the output generated file.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Data">
            <xs:annotation>
              <xs:documentation>Data items to be passed to the template file as the 'Model' with any metadata.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
</xs:schema>
