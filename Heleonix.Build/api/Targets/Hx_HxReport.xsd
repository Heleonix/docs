<?xml version="1.0" encoding="utf-8"?>

<!--
Example custom itemtype with particular meta-data required
<xs:element name="MyItem" substitutionGroup="msb:Item">
  <xs:complexType>
    <xs:complexContent>
      <xs:extension base="msb:SimpleItemType">
        <xs:sequence maxOccurs="1">
          <xs:choice>
            <xs:element name="MyMetaData" type="xs:string"/>
          </xs:choice>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
</xs:element>

Example custom itemtype with NO meta-data
<xs:element name="MySimpleItem" type="msb:SimpleItemType" substitutionGroup="msb:Item"/>

Example custom itemtype with ANY meta-data
<xs:element name="MyFlexibleItem" type="msb:GenericItemType" substitutionGroup="msb:Item"/>

Example custom property that allows string content only
<xs:element name="MySimpleProperty" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
-->

<xs:schema xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003"
           elementFormDefault="qualified"
           targetNamespace="http://schemas.microsoft.com/developer/msbuild/2003"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="Hx_HxReport" type="xs:string">
    <xs:annotation>
      <xs:documentation>
        Integrates the https://heleonix.github.io/docs/Testing/Heleonix.Testing.Reporting/index.html into the build framework.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="Hx_HxReport_ArtifactsDir" type="msb:StringPropertyType" substitutionGroup="msb:Property">
    <xs:annotation>
      <xs:documentation>A path to the HxReport artifacts directory. Default is '$Hx_Run_ArtifactsDir/HxReport'</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hx_HxReport_Formats" type="msb:StringPropertyType" substitutionGroup="msb:Property">
    <xs:annotation>
      <xs:documentation>Formats of output reports to generate. Default is 'Html'.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hx_HxReport_Merge" type="msb:StringPropertyType" substitutionGroup="msb:Property">
    <xs:annotation>
      <xs:documentation>
        Defines whether the reports for input files should be merged into a single one
        or for every input file should be generated a separate report file.
        Default is 'true'.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hx_HxReport_Verbosity" type="msb:StringPropertyType" substitutionGroup="msb:Property">
    <xs:annotation>
      <xs:documentation>
        The verbosity level for loggingn of the report generation process.
        Can be 'Critical', 'Debug', 'Error', 'Information', 'None', 'Trace', 'Warning'.
        Default is 'Information'.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="Hx_HxReport_TestResultFiles" type="msb:SimpleItemType" substitutionGroup="msb:Item">
    <xs:annotation>
      <xs:documentation>The test results files. Defaults are '$Hx_Run_ArtifactsDir/*Test/**/*.trx'.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hx_HxReport_Style" type="msb:SimpleItemType" substitutionGroup="msb:Item">
    <xs:annotation>
      <xs:documentation>
        The MSBuild item containing style overrides in its metadata.
        The metadata keys are possible styles as described in https://heleonix.github.io/docs/Testing/Heleonix.Testing.Reporting/index.html.
        For example: 'color-primary', 'color-secondary' etc.
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hx_HxReport_Content" type="msb:SimpleItemType" substitutionGroup="msb:Item">
    <xs:annotation>
      <xs:documentation>
        The MSBuild item containing content overrides in its metadata.
        The metadata keys are possible content overrides as described in https://heleonix.github.io/docs/Testing/Heleonix.Testing.Reporting/index.html.
        Metadata keys must have '_' instead of '.' in the content paths to be valid metadata keys.
        Underscores are replaced back with dots during the 'Hx_HxReport' target execution.
        For example: 'Footer_Text', 'Footer_Url', 'Result_Summary_Title', 'Result_Summary_Owner' etc.
      </xs:documentation>
    </xs:annotation>
  </xs:element>
</xs:schema>
