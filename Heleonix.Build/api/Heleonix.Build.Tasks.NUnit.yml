### YamlMime:ManagedReference
items:
- uid: Heleonix.Build.Tasks.NUnit
  commentId: T:Heleonix.Build.Tasks.NUnit
  id: NUnit
  parent: Heleonix.Build.Tasks
  children:
  - Heleonix.Build.Tasks.NUnit.#ctor
  - Heleonix.Build.Tasks.NUnit.AgentsNumber
  - Heleonix.Build.Tasks.NUnit.Asserts
  - Heleonix.Build.Tasks.NUnit.Configuration
  - Heleonix.Build.Tasks.NUnit.DomainIsolation
  - Heleonix.Build.Tasks.NUnit.Duration
  - Heleonix.Build.Tasks.NUnit.EndTime
  - Heleonix.Build.Tasks.NUnit.ExecuteInternal
  - Heleonix.Build.Tasks.NUnit.Failed
  - Heleonix.Build.Tasks.NUnit.Framework
  - Heleonix.Build.Tasks.NUnit.Inconclusive
  - Heleonix.Build.Tasks.NUnit.NUnitConsoleExe
  - Heleonix.Build.Tasks.NUnit.NUnitProjectFileOrTestFiles
  - Heleonix.Build.Tasks.NUnit.Passed
  - Heleonix.Build.Tasks.NUnit.ProcessIsolation
  - Heleonix.Build.Tasks.NUnit.ShadowCopy
  - Heleonix.Build.Tasks.NUnit.Skipped
  - Heleonix.Build.Tasks.NUnit.StartTime
  - Heleonix.Build.Tasks.NUnit.TestCases
  - Heleonix.Build.Tasks.NUnit.TestFilter
  - Heleonix.Build.Tasks.NUnit.TestListFile
  - Heleonix.Build.Tasks.NUnit.TestOutputFile
  - Heleonix.Build.Tasks.NUnit.TestParameters
  - Heleonix.Build.Tasks.NUnit.TestResultFile
  - Heleonix.Build.Tasks.NUnit.Total
  - Heleonix.Build.Tasks.NUnit.TraceLevel
  - Heleonix.Build.Tasks.NUnit.UseTeamCityServiceMessages
  - Heleonix.Build.Tasks.NUnit.WorkingDir
  langs:
  - csharp
  - vb
  name: NUnit
  nameWithType: NUnit
  fullName: Heleonix.Build.Tasks.NUnit
  type: Class
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nRuns the NUnit.\n"
  syntax:
    content: 'public class NUnit : BaseTask'
    content.vb: >-
      Public Class NUnit
          Inherits BaseTask
  inheritance:
  - System.Object
  - Heleonix.Build.Tasks.BaseTask
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Heleonix.Build.Tasks.NUnit.ExecuteInternal
  commentId: M:Heleonix.Build.Tasks.NUnit.ExecuteInternal
  id: ExecuteInternal
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: ExecuteInternal()
  nameWithType: NUnit.ExecuteInternal()
  fullName: Heleonix.Build.Tasks.NUnit.ExecuteInternal()
  type: Method
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nExecutes the NUnit.\n"
  syntax:
    content: protected override void ExecuteInternal()
    content.vb: Protected Overrides Sub ExecuteInternal
  overridden: Heleonix.Build.Tasks.BaseTask.ExecuteInternal
  overload: Heleonix.Build.Tasks.NUnit.ExecuteInternal*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Heleonix.Build.Tasks.NUnit.#ctor
  commentId: M:Heleonix.Build.Tasks.NUnit.#ctor
  id: '#ctor'
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: NUnit()
  nameWithType: NUnit.NUnit()
  fullName: Heleonix.Build.Tasks.NUnit.NUnit()
  type: Constructor
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  syntax:
    content: public NUnit()
    content.vb: Public Sub New
  overload: Heleonix.Build.Tasks.NUnit.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.NUnitConsoleExe
  commentId: P:Heleonix.Build.Tasks.NUnit.NUnitConsoleExe
  id: NUnitConsoleExe
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: NUnitConsoleExe
  nameWithType: NUnit.NUnitConsoleExe
  fullName: Heleonix.Build.Tasks.NUnit.NUnitConsoleExe
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the NUnit console executable path.\n"
  syntax:
    content: public string NUnitConsoleExe { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NUnitConsoleExe As String
  overload: Heleonix.Build.Tasks.NUnit.NUnitConsoleExe*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.NUnitProjectFileOrTestFiles
  commentId: P:Heleonix.Build.Tasks.NUnit.NUnitProjectFileOrTestFiles
  id: NUnitProjectFileOrTestFiles
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: NUnitProjectFileOrTestFiles
  nameWithType: NUnit.NUnitProjectFileOrTestFiles
  fullName: Heleonix.Build.Tasks.NUnit.NUnitProjectFileOrTestFiles
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the NUnit project or tests files paths.\n"
  syntax:
    content: public ITaskItem[] NUnitProjectFileOrTestFiles { get; set; }
    parameters: []
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
    content.vb: Public Property NUnitProjectFileOrTestFiles As ITaskItem()
  overload: Heleonix.Build.Tasks.NUnit.NUnitProjectFileOrTestFiles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.TestResultFile
  commentId: P:Heleonix.Build.Tasks.NUnit.TestResultFile
  id: TestResultFile
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: TestResultFile
  nameWithType: NUnit.TestResultFile
  fullName: Heleonix.Build.Tasks.NUnit.TestResultFile
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the NUnit tests result file path.\n"
  syntax:
    content: public string TestResultFile { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TestResultFile As String
  overload: Heleonix.Build.Tasks.NUnit.TestResultFile*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.TestOutputFile
  commentId: P:Heleonix.Build.Tasks.NUnit.TestOutputFile
  id: TestOutputFile
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: TestOutputFile
  nameWithType: NUnit.TestOutputFile
  fullName: Heleonix.Build.Tasks.NUnit.TestOutputFile
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the tests output file path.\n"
  syntax:
    content: public string TestOutputFile { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TestOutputFile As String
  overload: Heleonix.Build.Tasks.NUnit.TestOutputFile*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.TestListFile
  commentId: P:Heleonix.Build.Tasks.NUnit.TestListFile
  id: TestListFile
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: TestListFile
  nameWithType: NUnit.TestListFile
  fullName: Heleonix.Build.Tasks.NUnit.TestListFile
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the tests list file path.\n"
  remarks: "\nFile is containing a list of tests to run or explore, one per line.\n"
  syntax:
    content: public string TestListFile { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TestListFile As String
  overload: Heleonix.Build.Tasks.NUnit.TestListFile*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.TestParameters
  commentId: P:Heleonix.Build.Tasks.NUnit.TestParameters
  id: TestParameters
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: TestParameters
  nameWithType: NUnit.TestParameters
  fullName: Heleonix.Build.Tasks.NUnit.TestParameters
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the tests parameters, specified in the form name=value.\n"
  remarks: "\nMultiple parameters may be specified, separated by semicolons.\n"
  syntax:
    content: public string TestParameters { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TestParameters As String
  overload: Heleonix.Build.Tasks.NUnit.TestParameters*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.TestFilter
  commentId: P:Heleonix.Build.Tasks.NUnit.TestFilter
  id: TestFilter
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: TestFilter
  nameWithType: NUnit.TestFilter
  fullName: Heleonix.Build.Tasks.NUnit.TestFilter
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets a tests filter to filter tests to run.\n"
  remarks: "\nFor more details, see NUnit Test Selection Language.\n"
  syntax:
    content: public string TestFilter { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TestFilter As String
  overload: Heleonix.Build.Tasks.NUnit.TestFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.AgentsNumber
  commentId: P:Heleonix.Build.Tasks.NUnit.AgentsNumber
  id: AgentsNumber
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: AgentsNumber
  nameWithType: NUnit.AgentsNumber
  fullName: Heleonix.Build.Tasks.NUnit.AgentsNumber
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the agents number.\n"
  syntax:
    content: public int AgentsNumber { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property AgentsNumber As Integer
  overload: Heleonix.Build.Tasks.NUnit.AgentsNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.UseTeamCityServiceMessages
  commentId: P:Heleonix.Build.Tasks.NUnit.UseTeamCityServiceMessages
  id: UseTeamCityServiceMessages
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: UseTeamCityServiceMessages
  nameWithType: NUnit.UseTeamCityServiceMessages
  fullName: Heleonix.Build.Tasks.NUnit.UseTeamCityServiceMessages
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets a value indicating whether to use TeamCity service messages.\n"
  syntax:
    content: public bool UseTeamCityServiceMessages { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseTeamCityServiceMessages As Boolean
  overload: Heleonix.Build.Tasks.NUnit.UseTeamCityServiceMessages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.Framework
  commentId: P:Heleonix.Build.Tasks.NUnit.Framework
  id: Framework
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: Framework
  nameWithType: NUnit.Framework
  fullName: Heleonix.Build.Tasks.NUnit.Framework
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the framework to use for tests. Examples: &quot;mono&quot;, &quot;net-4.5&quot;, &quot;v4.0&quot;, &quot;2.0&quot;, &quot;mono-4.0&quot;.\n"
  syntax:
    content: public string Framework { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Framework As String
  overload: Heleonix.Build.Tasks.NUnit.Framework*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.TraceLevel
  commentId: P:Heleonix.Build.Tasks.NUnit.TraceLevel
  id: TraceLevel
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: TraceLevel
  nameWithType: NUnit.TraceLevel
  fullName: Heleonix.Build.Tasks.NUnit.TraceLevel
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the trace level. Default is &quot;Warning&quot;.\n"
  remarks: "\nPossible values:\n<ul><li>Off</li><li>Error</li><li>Warning</li><li>Info</li><li>Verbose</li></ul>\n"
  syntax:
    content: public string TraceLevel { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TraceLevel As String
  overload: Heleonix.Build.Tasks.NUnit.TraceLevel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.Configuration
  commentId: P:Heleonix.Build.Tasks.NUnit.Configuration
  id: Configuration
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: NUnit.Configuration
  fullName: Heleonix.Build.Tasks.NUnit.Configuration
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the project configuration to load, i.e. &quot;Debug&quot;, &quot;Release&quot;.\n"
  syntax:
    content: public string Configuration { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Configuration As String
  overload: Heleonix.Build.Tasks.NUnit.Configuration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.ProcessIsolation
  commentId: P:Heleonix.Build.Tasks.NUnit.ProcessIsolation
  id: ProcessIsolation
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: ProcessIsolation
  nameWithType: NUnit.ProcessIsolation
  fullName: Heleonix.Build.Tasks.NUnit.ProcessIsolation
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets process isolation for test assemblies.\n"
  remarks: "\nIf not specified, defaults to &quot;Separate&quot; for a single assembly or &quot;Multiple&quot; for more than one.\nBy default, processes are run in parallel.\nPossible values:\n<ul><li>Single</li><li>Separate</li><li>Multiple</li></ul>\n"
  syntax:
    content: public string ProcessIsolation { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ProcessIsolation As String
  overload: Heleonix.Build.Tasks.NUnit.ProcessIsolation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.DomainIsolation
  commentId: P:Heleonix.Build.Tasks.NUnit.DomainIsolation
  id: DomainIsolation
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: DomainIsolation
  nameWithType: NUnit.DomainIsolation
  fullName: Heleonix.Build.Tasks.NUnit.DomainIsolation
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets domain isolation for test assemblies.\n"
  remarks: "\nIf not specified, defaults to &quot;Separate&quot; for a single assembly or &quot;Multiple&quot; for more than one.\nPossible values:\n<ul><li>None</li><li>Single</li><li>Multiple</li></ul>\n"
  syntax:
    content: public string DomainIsolation { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DomainIsolation As String
  overload: Heleonix.Build.Tasks.NUnit.DomainIsolation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.ShadowCopy
  commentId: P:Heleonix.Build.Tasks.NUnit.ShadowCopy
  id: ShadowCopy
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: ShadowCopy
  nameWithType: NUnit.ShadowCopy
  fullName: Heleonix.Build.Tasks.NUnit.ShadowCopy
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets a value indicating whether to copy loaded assemblies to the shadow copy directory.\n"
  syntax:
    content: public bool ShadowCopy { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ShadowCopy As Boolean
  overload: Heleonix.Build.Tasks.NUnit.ShadowCopy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.WorkingDir
  commentId: P:Heleonix.Build.Tasks.NUnit.WorkingDir
  id: WorkingDir
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: WorkingDir
  nameWithType: NUnit.WorkingDir
  fullName: Heleonix.Build.Tasks.NUnit.WorkingDir
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the working directory to run the executable in.\n"
  syntax:
    content: public string WorkingDir { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property WorkingDir As String
  overload: Heleonix.Build.Tasks.NUnit.WorkingDir*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.TestCases
  commentId: P:Heleonix.Build.Tasks.NUnit.TestCases
  id: TestCases
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: TestCases
  nameWithType: NUnit.TestCases
  fullName: Heleonix.Build.Tasks.NUnit.TestCases
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the count of test cases [Output].\n"
  syntax:
    content: public int TestCases { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TestCases As Integer
  overload: Heleonix.Build.Tasks.NUnit.TestCases*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.Total
  commentId: P:Heleonix.Build.Tasks.NUnit.Total
  id: Total
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: Total
  nameWithType: NUnit.Total
  fullName: Heleonix.Build.Tasks.NUnit.Total
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the total count of tests [Output].\n"
  syntax:
    content: public int Total { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Total As Integer
  overload: Heleonix.Build.Tasks.NUnit.Total*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.Passed
  commentId: P:Heleonix.Build.Tasks.NUnit.Passed
  id: Passed
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: Passed
  nameWithType: NUnit.Passed
  fullName: Heleonix.Build.Tasks.NUnit.Passed
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the count of passed tests [Output].\n"
  syntax:
    content: public int Passed { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Passed As Integer
  overload: Heleonix.Build.Tasks.NUnit.Passed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.Failed
  commentId: P:Heleonix.Build.Tasks.NUnit.Failed
  id: Failed
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: Failed
  nameWithType: NUnit.Failed
  fullName: Heleonix.Build.Tasks.NUnit.Failed
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the count of failed tests [Output].\n"
  syntax:
    content: public int Failed { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Failed As Integer
  overload: Heleonix.Build.Tasks.NUnit.Failed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.Inconclusive
  commentId: P:Heleonix.Build.Tasks.NUnit.Inconclusive
  id: Inconclusive
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: Inconclusive
  nameWithType: NUnit.Inconclusive
  fullName: Heleonix.Build.Tasks.NUnit.Inconclusive
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the count of inconclusive tests [Output].\n"
  syntax:
    content: public int Inconclusive { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Inconclusive As Integer
  overload: Heleonix.Build.Tasks.NUnit.Inconclusive*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.Skipped
  commentId: P:Heleonix.Build.Tasks.NUnit.Skipped
  id: Skipped
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: Skipped
  nameWithType: NUnit.Skipped
  fullName: Heleonix.Build.Tasks.NUnit.Skipped
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the count of skipped tests [Output].\n"
  syntax:
    content: public int Skipped { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Skipped As Integer
  overload: Heleonix.Build.Tasks.NUnit.Skipped*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.Asserts
  commentId: P:Heleonix.Build.Tasks.NUnit.Asserts
  id: Asserts
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: Asserts
  nameWithType: NUnit.Asserts
  fullName: Heleonix.Build.Tasks.NUnit.Asserts
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the count of asserts [Output].\n"
  syntax:
    content: public int Asserts { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Asserts As Integer
  overload: Heleonix.Build.Tasks.NUnit.Asserts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.StartTime
  commentId: P:Heleonix.Build.Tasks.NUnit.StartTime
  id: StartTime
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: NUnit.StartTime
  fullName: Heleonix.Build.Tasks.NUnit.StartTime
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the start time [Output].\n"
  syntax:
    content: public string StartTime { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property StartTime As String
  overload: Heleonix.Build.Tasks.NUnit.StartTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.EndTime
  commentId: P:Heleonix.Build.Tasks.NUnit.EndTime
  id: EndTime
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: NUnit.EndTime
  fullName: Heleonix.Build.Tasks.NUnit.EndTime
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the end time [Output].\n"
  syntax:
    content: public string EndTime { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property EndTime As String
  overload: Heleonix.Build.Tasks.NUnit.EndTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.NUnit.Duration
  commentId: P:Heleonix.Build.Tasks.NUnit.Duration
  id: Duration
  parent: Heleonix.Build.Tasks.NUnit
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: NUnit.Duration
  fullName: Heleonix.Build.Tasks.NUnit.Duration
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the duration of tests running [Output].\n"
  syntax:
    content: public float Duration { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Duration As Single
  overload: Heleonix.Build.Tasks.NUnit.Duration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Heleonix.Build.Tasks
  commentId: N:Heleonix.Build.Tasks
  isExternal: true
  name: Heleonix.Build.Tasks
  nameWithType: Heleonix.Build.Tasks
  fullName: Heleonix.Build.Tasks
- uid: Heleonix.Build.Tasks.BaseTask
  commentId: T:Heleonix.Build.Tasks.BaseTask
  parent: Heleonix.Build.Tasks
  isExternal: true
  name: BaseTask
  nameWithType: BaseTask
  fullName: Heleonix.Build.Tasks.BaseTask
- uid: Heleonix.Build.Tasks.BaseTask.ExecuteInternal
  commentId: M:Heleonix.Build.Tasks.BaseTask.ExecuteInternal
  parent: Heleonix.Build.Tasks.BaseTask
  isExternal: true
  name: ExecuteInternal()
  nameWithType: BaseTask.ExecuteInternal()
  fullName: Heleonix.Build.Tasks.BaseTask.ExecuteInternal()
  spec.csharp:
  - uid: Heleonix.Build.Tasks.BaseTask.ExecuteInternal
    name: ExecuteInternal
    nameWithType: BaseTask.ExecuteInternal
    fullName: Heleonix.Build.Tasks.BaseTask.ExecuteInternal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Heleonix.Build.Tasks.BaseTask.ExecuteInternal
    name: ExecuteInternal
    nameWithType: BaseTask.ExecuteInternal
    fullName: Heleonix.Build.Tasks.BaseTask.ExecuteInternal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Heleonix.Build.Tasks.NUnit.ExecuteInternal*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.ExecuteInternal
  isExternal: true
  name: ExecuteInternal
  nameWithType: NUnit.ExecuteInternal
  fullName: Heleonix.Build.Tasks.NUnit.ExecuteInternal
- uid: Heleonix.Build.Tasks.NUnit.#ctor*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.#ctor
  isExternal: true
  name: NUnit
  nameWithType: NUnit.NUnit
  fullName: Heleonix.Build.Tasks.NUnit.NUnit
- uid: Heleonix.Build.Tasks.NUnit.NUnitConsoleExe*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.NUnitConsoleExe
  isExternal: true
  name: NUnitConsoleExe
  nameWithType: NUnit.NUnitConsoleExe
  fullName: Heleonix.Build.Tasks.NUnit.NUnitConsoleExe
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Heleonix.Build.Tasks.NUnit.NUnitProjectFileOrTestFiles*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.NUnitProjectFileOrTestFiles
  isExternal: true
  name: NUnitProjectFileOrTestFiles
  nameWithType: NUnit.NUnitProjectFileOrTestFiles
  fullName: Heleonix.Build.Tasks.NUnit.NUnitProjectFileOrTestFiles
- uid: Microsoft.Build.Framework.ITaskItem[]
  isExternal: true
  name: ITaskItem[]
  nameWithType: ITaskItem[]
  fullName: Microsoft.Build.Framework.ITaskItem[]
  nameWithType.vb: ITaskItem()
  fullName.vb: Microsoft.Build.Framework.ITaskItem()
  name.vb: ITaskItem()
  spec.csharp:
  - uid: Microsoft.Build.Framework.ITaskItem
    name: ITaskItem
    nameWithType: ITaskItem
    fullName: Microsoft.Build.Framework.ITaskItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Build.Framework.ITaskItem
    name: ITaskItem
    nameWithType: ITaskItem
    fullName: Microsoft.Build.Framework.ITaskItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Heleonix.Build.Tasks.NUnit.TestResultFile*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.TestResultFile
  isExternal: true
  name: TestResultFile
  nameWithType: NUnit.TestResultFile
  fullName: Heleonix.Build.Tasks.NUnit.TestResultFile
- uid: Heleonix.Build.Tasks.NUnit.TestOutputFile*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.TestOutputFile
  isExternal: true
  name: TestOutputFile
  nameWithType: NUnit.TestOutputFile
  fullName: Heleonix.Build.Tasks.NUnit.TestOutputFile
- uid: Heleonix.Build.Tasks.NUnit.TestListFile*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.TestListFile
  isExternal: true
  name: TestListFile
  nameWithType: NUnit.TestListFile
  fullName: Heleonix.Build.Tasks.NUnit.TestListFile
- uid: Heleonix.Build.Tasks.NUnit.TestParameters*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.TestParameters
  isExternal: true
  name: TestParameters
  nameWithType: NUnit.TestParameters
  fullName: Heleonix.Build.Tasks.NUnit.TestParameters
- uid: Heleonix.Build.Tasks.NUnit.TestFilter*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.TestFilter
  isExternal: true
  name: TestFilter
  nameWithType: NUnit.TestFilter
  fullName: Heleonix.Build.Tasks.NUnit.TestFilter
- uid: Heleonix.Build.Tasks.NUnit.AgentsNumber*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.AgentsNumber
  isExternal: true
  name: AgentsNumber
  nameWithType: NUnit.AgentsNumber
  fullName: Heleonix.Build.Tasks.NUnit.AgentsNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Heleonix.Build.Tasks.NUnit.UseTeamCityServiceMessages*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.UseTeamCityServiceMessages
  isExternal: true
  name: UseTeamCityServiceMessages
  nameWithType: NUnit.UseTeamCityServiceMessages
  fullName: Heleonix.Build.Tasks.NUnit.UseTeamCityServiceMessages
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Heleonix.Build.Tasks.NUnit.Framework*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.Framework
  isExternal: true
  name: Framework
  nameWithType: NUnit.Framework
  fullName: Heleonix.Build.Tasks.NUnit.Framework
- uid: Heleonix.Build.Tasks.NUnit.TraceLevel*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.TraceLevel
  isExternal: true
  name: TraceLevel
  nameWithType: NUnit.TraceLevel
  fullName: Heleonix.Build.Tasks.NUnit.TraceLevel
- uid: Heleonix.Build.Tasks.NUnit.Configuration*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.Configuration
  isExternal: true
  name: Configuration
  nameWithType: NUnit.Configuration
  fullName: Heleonix.Build.Tasks.NUnit.Configuration
- uid: Heleonix.Build.Tasks.NUnit.ProcessIsolation*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.ProcessIsolation
  isExternal: true
  name: ProcessIsolation
  nameWithType: NUnit.ProcessIsolation
  fullName: Heleonix.Build.Tasks.NUnit.ProcessIsolation
- uid: Heleonix.Build.Tasks.NUnit.DomainIsolation*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.DomainIsolation
  isExternal: true
  name: DomainIsolation
  nameWithType: NUnit.DomainIsolation
  fullName: Heleonix.Build.Tasks.NUnit.DomainIsolation
- uid: Heleonix.Build.Tasks.NUnit.ShadowCopy*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.ShadowCopy
  isExternal: true
  name: ShadowCopy
  nameWithType: NUnit.ShadowCopy
  fullName: Heleonix.Build.Tasks.NUnit.ShadowCopy
- uid: Heleonix.Build.Tasks.NUnit.WorkingDir*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.WorkingDir
  isExternal: true
  name: WorkingDir
  nameWithType: NUnit.WorkingDir
  fullName: Heleonix.Build.Tasks.NUnit.WorkingDir
- uid: Heleonix.Build.Tasks.NUnit.TestCases*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.TestCases
  isExternal: true
  name: TestCases
  nameWithType: NUnit.TestCases
  fullName: Heleonix.Build.Tasks.NUnit.TestCases
- uid: Heleonix.Build.Tasks.NUnit.Total*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.Total
  isExternal: true
  name: Total
  nameWithType: NUnit.Total
  fullName: Heleonix.Build.Tasks.NUnit.Total
- uid: Heleonix.Build.Tasks.NUnit.Passed*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.Passed
  isExternal: true
  name: Passed
  nameWithType: NUnit.Passed
  fullName: Heleonix.Build.Tasks.NUnit.Passed
- uid: Heleonix.Build.Tasks.NUnit.Failed*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.Failed
  isExternal: true
  name: Failed
  nameWithType: NUnit.Failed
  fullName: Heleonix.Build.Tasks.NUnit.Failed
- uid: Heleonix.Build.Tasks.NUnit.Inconclusive*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.Inconclusive
  isExternal: true
  name: Inconclusive
  nameWithType: NUnit.Inconclusive
  fullName: Heleonix.Build.Tasks.NUnit.Inconclusive
- uid: Heleonix.Build.Tasks.NUnit.Skipped*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.Skipped
  isExternal: true
  name: Skipped
  nameWithType: NUnit.Skipped
  fullName: Heleonix.Build.Tasks.NUnit.Skipped
- uid: Heleonix.Build.Tasks.NUnit.Asserts*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.Asserts
  isExternal: true
  name: Asserts
  nameWithType: NUnit.Asserts
  fullName: Heleonix.Build.Tasks.NUnit.Asserts
- uid: Heleonix.Build.Tasks.NUnit.StartTime*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.StartTime
  isExternal: true
  name: StartTime
  nameWithType: NUnit.StartTime
  fullName: Heleonix.Build.Tasks.NUnit.StartTime
- uid: Heleonix.Build.Tasks.NUnit.EndTime*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.EndTime
  isExternal: true
  name: EndTime
  nameWithType: NUnit.EndTime
  fullName: Heleonix.Build.Tasks.NUnit.EndTime
- uid: Heleonix.Build.Tasks.NUnit.Duration*
  commentId: Overload:Heleonix.Build.Tasks.NUnit.Duration
  isExternal: true
  name: Duration
  nameWithType: NUnit.Duration
  fullName: Heleonix.Build.Tasks.NUnit.Duration
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
