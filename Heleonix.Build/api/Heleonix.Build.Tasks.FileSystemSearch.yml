### YamlMime:ManagedReference
items:
- uid: Heleonix.Build.Tasks.FileSystemSearch
  commentId: T:Heleonix.Build.Tasks.FileSystemSearch
  id: FileSystemSearch
  parent: Heleonix.Build.Tasks
  children:
  - Heleonix.Build.Tasks.FileSystemSearch.#ctor
  - Heleonix.Build.Tasks.FileSystemSearch.ContentRegExp
  - Heleonix.Build.Tasks.FileSystemSearch.ContentRegExpOptions
  - Heleonix.Build.Tasks.FileSystemSearch.Direction
  - Heleonix.Build.Tasks.FileSystemSearch.ExecuteInternal
  - Heleonix.Build.Tasks.FileSystemSearch.FoundDirs
  - Heleonix.Build.Tasks.FileSystemSearch.FoundFiles
  - Heleonix.Build.Tasks.FileSystemSearch.FoundItems
  - Heleonix.Build.Tasks.FileSystemSearch.PathRegExp
  - Heleonix.Build.Tasks.FileSystemSearch.PathRegExpOptions
  - Heleonix.Build.Tasks.FileSystemSearch.StartDir
  - Heleonix.Build.Tasks.FileSystemSearch.Types
  langs:
  - csharp
  - vb
  name: FileSystemSearch
  nameWithType: FileSystemSearch
  fullName: Heleonix.Build.Tasks.FileSystemSearch
  type: Class
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nSearches items in the file system.\n"
  syntax:
    content: 'public class FileSystemSearch : BaseTask'
    content.vb: >-
      Public Class FileSystemSearch
          Inherits BaseTask
  inheritance:
  - System.Object
  - Heleonix.Build.Tasks.BaseTask
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Heleonix.Build.Tasks.FileSystemSearch.ExecuteInternal
  commentId: M:Heleonix.Build.Tasks.FileSystemSearch.ExecuteInternal
  id: ExecuteInternal
  parent: Heleonix.Build.Tasks.FileSystemSearch
  langs:
  - csharp
  - vb
  name: ExecuteInternal()
  nameWithType: FileSystemSearch.ExecuteInternal()
  fullName: Heleonix.Build.Tasks.FileSystemSearch.ExecuteInternal()
  type: Method
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nSearches items in the file system.\n"
  syntax:
    content: protected override void ExecuteInternal()
    content.vb: Protected Overrides Sub ExecuteInternal
  overridden: Heleonix.Build.Tasks.BaseTask.ExecuteInternal
  overload: Heleonix.Build.Tasks.FileSystemSearch.ExecuteInternal*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Heleonix.Build.Tasks.FileSystemSearch.#ctor
  commentId: M:Heleonix.Build.Tasks.FileSystemSearch.#ctor
  id: '#ctor'
  parent: Heleonix.Build.Tasks.FileSystemSearch
  langs:
  - csharp
  - vb
  name: FileSystemSearch()
  nameWithType: FileSystemSearch.FileSystemSearch()
  fullName: Heleonix.Build.Tasks.FileSystemSearch.FileSystemSearch()
  type: Constructor
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  syntax:
    content: public FileSystemSearch()
    content.vb: Public Sub New
  overload: Heleonix.Build.Tasks.FileSystemSearch.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.FileSystemSearch.StartDir
  commentId: P:Heleonix.Build.Tasks.FileSystemSearch.StartDir
  id: StartDir
  parent: Heleonix.Build.Tasks.FileSystemSearch
  langs:
  - csharp
  - vb
  name: StartDir
  nameWithType: FileSystemSearch.StartDir
  fullName: Heleonix.Build.Tasks.FileSystemSearch.StartDir
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the directory to start from, including that directory.\n"
  syntax:
    content: public string StartDir { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property StartDir As String
  overload: Heleonix.Build.Tasks.FileSystemSearch.StartDir*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.FileSystemSearch.Direction
  commentId: P:Heleonix.Build.Tasks.FileSystemSearch.Direction
  id: Direction
  parent: Heleonix.Build.Tasks.FileSystemSearch
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: FileSystemSearch.Direction
  fullName: Heleonix.Build.Tasks.FileSystemSearch.Direction
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the search direction.\n"
  remarks: "\nPossible values:\n<ul><li>Up</li><li>Down</li></ul>\nDefault is &quot;Down&quot;.\n"
  syntax:
    content: public string Direction { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Direction As String
  overload: Heleonix.Build.Tasks.FileSystemSearch.Direction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.FileSystemSearch.Types
  commentId: P:Heleonix.Build.Tasks.FileSystemSearch.Types
  id: Types
  parent: Heleonix.Build.Tasks.FileSystemSearch
  langs:
  - csharp
  - vb
  name: Types
  nameWithType: FileSystemSearch.Types
  fullName: Heleonix.Build.Tasks.FileSystemSearch.Types
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets types of items to search.\n"
  remarks: "\nPossible values:\n<ul><li>Files</li><li>Directories</li><li>All</li></ul>\nDefault is &quot;All&quot;.\n"
  syntax:
    content: public string Types { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Types As String
  overload: Heleonix.Build.Tasks.FileSystemSearch.Types*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.FileSystemSearch.PathRegExp
  commentId: P:Heleonix.Build.Tasks.FileSystemSearch.PathRegExp
  id: PathRegExp
  parent: Heleonix.Build.Tasks.FileSystemSearch
  langs:
  - csharp
  - vb
  name: PathRegExp
  nameWithType: FileSystemSearch.PathRegExp
  fullName: Heleonix.Build.Tasks.FileSystemSearch.PathRegExp
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the .NET regular expression to include found paths. Use only / for path separators.\n"
  syntax:
    content: public string PathRegExp { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PathRegExp As String
  overload: Heleonix.Build.Tasks.FileSystemSearch.PathRegExp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.FileSystemSearch.PathRegExpOptions
  commentId: P:Heleonix.Build.Tasks.FileSystemSearch.PathRegExpOptions
  id: PathRegExpOptions
  parent: Heleonix.Build.Tasks.FileSystemSearch
  langs:
  - csharp
  - vb
  name: PathRegExpOptions
  nameWithType: FileSystemSearch.PathRegExpOptions
  fullName: Heleonix.Build.Tasks.FileSystemSearch.PathRegExpOptions
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the .NET regular expression options to include found paths. Default is &quot;IgnoreCase&quot;.\n"
  syntax:
    content: public string PathRegExpOptions { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PathRegExpOptions As String
  overload: Heleonix.Build.Tasks.FileSystemSearch.PathRegExpOptions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.FileSystemSearch.ContentRegExp
  commentId: P:Heleonix.Build.Tasks.FileSystemSearch.ContentRegExp
  id: ContentRegExp
  parent: Heleonix.Build.Tasks.FileSystemSearch
  langs:
  - csharp
  - vb
  name: ContentRegExp
  nameWithType: FileSystemSearch.ContentRegExp
  fullName: Heleonix.Build.Tasks.FileSystemSearch.ContentRegExp
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the .NET regular expression to include by content.\n"
  syntax:
    content: public string ContentRegExp { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ContentRegExp As String
  overload: Heleonix.Build.Tasks.FileSystemSearch.ContentRegExp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.FileSystemSearch.ContentRegExpOptions
  commentId: P:Heleonix.Build.Tasks.FileSystemSearch.ContentRegExpOptions
  id: ContentRegExpOptions
  parent: Heleonix.Build.Tasks.FileSystemSearch
  langs:
  - csharp
  - vb
  name: ContentRegExpOptions
  nameWithType: FileSystemSearch.ContentRegExpOptions
  fullName: Heleonix.Build.Tasks.FileSystemSearch.ContentRegExpOptions
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the .NET regular expression options to include by content.\n"
  syntax:
    content: public string ContentRegExpOptions { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ContentRegExpOptions As String
  overload: Heleonix.Build.Tasks.FileSystemSearch.ContentRegExpOptions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.FileSystemSearch.FoundFiles
  commentId: P:Heleonix.Build.Tasks.FileSystemSearch.FoundFiles
  id: FoundFiles
  parent: Heleonix.Build.Tasks.FileSystemSearch
  langs:
  - csharp
  - vb
  name: FoundFiles
  nameWithType: FileSystemSearch.FoundFiles
  fullName: Heleonix.Build.Tasks.FileSystemSearch.FoundFiles
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the found files [Output].\n"
  syntax:
    content: public ITaskItem[] FoundFiles { get; set; }
    parameters: []
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
    content.vb: Public Property FoundFiles As ITaskItem()
  overload: Heleonix.Build.Tasks.FileSystemSearch.FoundFiles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.FileSystemSearch.FoundDirs
  commentId: P:Heleonix.Build.Tasks.FileSystemSearch.FoundDirs
  id: FoundDirs
  parent: Heleonix.Build.Tasks.FileSystemSearch
  langs:
  - csharp
  - vb
  name: FoundDirs
  nameWithType: FileSystemSearch.FoundDirs
  fullName: Heleonix.Build.Tasks.FileSystemSearch.FoundDirs
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets the found directories [Output].\n"
  syntax:
    content: public ITaskItem[] FoundDirs { get; set; }
    parameters: []
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
    content.vb: Public Property FoundDirs As ITaskItem()
  overload: Heleonix.Build.Tasks.FileSystemSearch.FoundDirs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Build.Tasks.FileSystemSearch.FoundItems
  commentId: P:Heleonix.Build.Tasks.FileSystemSearch.FoundItems
  id: FoundItems
  parent: Heleonix.Build.Tasks.FileSystemSearch
  langs:
  - csharp
  - vb
  name: FoundItems
  nameWithType: FileSystemSearch.FoundItems
  fullName: Heleonix.Build.Tasks.FileSystemSearch.FoundItems
  type: Property
  source:
    path: Heleonix.Build
    isExternal: true
  assemblies:
  - Heleonix.Build
  namespace: Heleonix.Build.Tasks
  summary: "\nGets or sets All the found items [Output].\n"
  syntax:
    content: public ITaskItem[] FoundItems { get; set; }
    parameters: []
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
    content.vb: Public Property FoundItems As ITaskItem()
  overload: Heleonix.Build.Tasks.FileSystemSearch.FoundItems*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Heleonix.Build.Tasks
  commentId: N:Heleonix.Build.Tasks
  isExternal: true
  name: Heleonix.Build.Tasks
  nameWithType: Heleonix.Build.Tasks
  fullName: Heleonix.Build.Tasks
- uid: Heleonix.Build.Tasks.BaseTask
  commentId: T:Heleonix.Build.Tasks.BaseTask
  parent: Heleonix.Build.Tasks
  isExternal: true
  name: BaseTask
  nameWithType: BaseTask
  fullName: Heleonix.Build.Tasks.BaseTask
- uid: Heleonix.Build.Tasks.BaseTask.ExecuteInternal
  commentId: M:Heleonix.Build.Tasks.BaseTask.ExecuteInternal
  parent: Heleonix.Build.Tasks.BaseTask
  isExternal: true
  name: ExecuteInternal()
  nameWithType: BaseTask.ExecuteInternal()
  fullName: Heleonix.Build.Tasks.BaseTask.ExecuteInternal()
  spec.csharp:
  - uid: Heleonix.Build.Tasks.BaseTask.ExecuteInternal
    name: ExecuteInternal
    nameWithType: BaseTask.ExecuteInternal
    fullName: Heleonix.Build.Tasks.BaseTask.ExecuteInternal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Heleonix.Build.Tasks.BaseTask.ExecuteInternal
    name: ExecuteInternal
    nameWithType: BaseTask.ExecuteInternal
    fullName: Heleonix.Build.Tasks.BaseTask.ExecuteInternal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Heleonix.Build.Tasks.FileSystemSearch.ExecuteInternal*
  commentId: Overload:Heleonix.Build.Tasks.FileSystemSearch.ExecuteInternal
  isExternal: true
  name: ExecuteInternal
  nameWithType: FileSystemSearch.ExecuteInternal
  fullName: Heleonix.Build.Tasks.FileSystemSearch.ExecuteInternal
- uid: Heleonix.Build.Tasks.FileSystemSearch.#ctor*
  commentId: Overload:Heleonix.Build.Tasks.FileSystemSearch.#ctor
  isExternal: true
  name: FileSystemSearch
  nameWithType: FileSystemSearch.FileSystemSearch
  fullName: Heleonix.Build.Tasks.FileSystemSearch.FileSystemSearch
- uid: Heleonix.Build.Tasks.FileSystemSearch.StartDir*
  commentId: Overload:Heleonix.Build.Tasks.FileSystemSearch.StartDir
  isExternal: true
  name: StartDir
  nameWithType: FileSystemSearch.StartDir
  fullName: Heleonix.Build.Tasks.FileSystemSearch.StartDir
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Heleonix.Build.Tasks.FileSystemSearch.Direction*
  commentId: Overload:Heleonix.Build.Tasks.FileSystemSearch.Direction
  isExternal: true
  name: Direction
  nameWithType: FileSystemSearch.Direction
  fullName: Heleonix.Build.Tasks.FileSystemSearch.Direction
- uid: Heleonix.Build.Tasks.FileSystemSearch.Types*
  commentId: Overload:Heleonix.Build.Tasks.FileSystemSearch.Types
  isExternal: true
  name: Types
  nameWithType: FileSystemSearch.Types
  fullName: Heleonix.Build.Tasks.FileSystemSearch.Types
- uid: Heleonix.Build.Tasks.FileSystemSearch.PathRegExp*
  commentId: Overload:Heleonix.Build.Tasks.FileSystemSearch.PathRegExp
  isExternal: true
  name: PathRegExp
  nameWithType: FileSystemSearch.PathRegExp
  fullName: Heleonix.Build.Tasks.FileSystemSearch.PathRegExp
- uid: Heleonix.Build.Tasks.FileSystemSearch.PathRegExpOptions*
  commentId: Overload:Heleonix.Build.Tasks.FileSystemSearch.PathRegExpOptions
  isExternal: true
  name: PathRegExpOptions
  nameWithType: FileSystemSearch.PathRegExpOptions
  fullName: Heleonix.Build.Tasks.FileSystemSearch.PathRegExpOptions
- uid: Heleonix.Build.Tasks.FileSystemSearch.ContentRegExp*
  commentId: Overload:Heleonix.Build.Tasks.FileSystemSearch.ContentRegExp
  isExternal: true
  name: ContentRegExp
  nameWithType: FileSystemSearch.ContentRegExp
  fullName: Heleonix.Build.Tasks.FileSystemSearch.ContentRegExp
- uid: Heleonix.Build.Tasks.FileSystemSearch.ContentRegExpOptions*
  commentId: Overload:Heleonix.Build.Tasks.FileSystemSearch.ContentRegExpOptions
  isExternal: true
  name: ContentRegExpOptions
  nameWithType: FileSystemSearch.ContentRegExpOptions
  fullName: Heleonix.Build.Tasks.FileSystemSearch.ContentRegExpOptions
- uid: Heleonix.Build.Tasks.FileSystemSearch.FoundFiles*
  commentId: Overload:Heleonix.Build.Tasks.FileSystemSearch.FoundFiles
  isExternal: true
  name: FoundFiles
  nameWithType: FileSystemSearch.FoundFiles
  fullName: Heleonix.Build.Tasks.FileSystemSearch.FoundFiles
- uid: Microsoft.Build.Framework.ITaskItem[]
  isExternal: true
  name: ITaskItem[]
  nameWithType: ITaskItem[]
  fullName: Microsoft.Build.Framework.ITaskItem[]
  nameWithType.vb: ITaskItem()
  fullName.vb: Microsoft.Build.Framework.ITaskItem()
  name.vb: ITaskItem()
  spec.csharp:
  - uid: Microsoft.Build.Framework.ITaskItem
    name: ITaskItem
    nameWithType: ITaskItem
    fullName: Microsoft.Build.Framework.ITaskItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Build.Framework.ITaskItem
    name: ITaskItem
    nameWithType: ITaskItem
    fullName: Microsoft.Build.Framework.ITaskItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Heleonix.Build.Tasks.FileSystemSearch.FoundDirs*
  commentId: Overload:Heleonix.Build.Tasks.FileSystemSearch.FoundDirs
  isExternal: true
  name: FoundDirs
  nameWithType: FileSystemSearch.FoundDirs
  fullName: Heleonix.Build.Tasks.FileSystemSearch.FoundDirs
- uid: Heleonix.Build.Tasks.FileSystemSearch.FoundItems*
  commentId: Overload:Heleonix.Build.Tasks.FileSystemSearch.FoundItems
  isExternal: true
  name: FoundItems
  nameWithType: FileSystemSearch.FoundItems
  fullName: Heleonix.Build.Tasks.FileSystemSearch.FoundItems
