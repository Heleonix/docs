### YamlMime:ManagedReference
items:
- uid: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute
  commentId: T:Heleonix.Testing.NUnit.Bdd.ScenarioAttribute
  id: ScenarioAttribute
  parent: Heleonix.Testing.NUnit.Bdd
  children:
  - Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.#ctor
  - Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.ApplyToContext(NUnit.Framework.Internal.TestExecutionContext)
  - Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.BuildFrom(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.Test)
  - Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.Name
  - Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.Properties
  - Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.TestName
  langs:
  - csharp
  - vb
  name: ScenarioAttribute
  nameWithType: ScenarioAttribute
  fullName: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute
  type: Class
  source:
    path: Heleonix.Testing.NUnit
    isExternal: true
  assemblies:
  - Heleonix.Testing.NUnit
  namespace: Heleonix.Testing.NUnit.Bdd
  summary: "\nMarks a test a a scenario test.\n"
  syntax:
    content: 'public sealed class ScenarioAttribute : TestAttribute'
    content.vb: >-
      Public NotInheritable Class ScenarioAttribute

          Inherits TestAttribute
  seealso:
  - linkId: Heleonix.Testing.NUnit.TestAttribute
    commentId: T:Heleonix.Testing.NUnit.TestAttribute
  inheritance:
  - System.Object
  - Heleonix.Testing.NUnit.BaseAttribute
  - Heleonix.Testing.NUnit.TestAttribute
  implements:
  - NUnit.Framework.Interfaces.ISimpleTestBuilder
  - NUnit.Framework.Interfaces.IApplyToContext
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.BuildFrom(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.Test)
  commentId: M:Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.BuildFrom(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.Test)
  id: BuildFrom(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.Test)
  parent: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute
  langs:
  - csharp
  - vb
  name: BuildFrom(IMethodInfo, Test)
  nameWithType: ScenarioAttribute.BuildFrom(IMethodInfo, Test)
  fullName: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.BuildFrom(NUnit.Framework.Interfaces.IMethodInfo, NUnit.Framework.Internal.Test)
  type: Method
  source:
    path: Heleonix.Testing.NUnit
    isExternal: true
  assemblies:
  - Heleonix.Testing.NUnit
  namespace: Heleonix.Testing.NUnit.Bdd
  summary: "\nBuild a TestMethod from the provided MethodInfo.\n"
  syntax:
    content: public override TestMethod BuildFrom(IMethodInfo method, Test suite)
    parameters:
    - id: method
      type: NUnit.Framework.Interfaces.IMethodInfo
      description: The method to be used as a test.
    - id: suite
      type: NUnit.Framework.Internal.Test
      description: The TestSuite to which the method will be added.
    return:
      type: NUnit.Framework.Internal.TestMethod
      description: "\nA TestMethod object.\n"
    content.vb: Public Overrides Function BuildFrom(method As IMethodInfo, suite As Test) As TestMethod
  overridden: Heleonix.Testing.NUnit.TestAttribute.BuildFrom(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.Test)
  overload: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.BuildFrom*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.ApplyToContext(NUnit.Framework.Internal.TestExecutionContext)
  commentId: M:Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.ApplyToContext(NUnit.Framework.Internal.TestExecutionContext)
  id: ApplyToContext(NUnit.Framework.Internal.TestExecutionContext)
  parent: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute
  langs:
  - csharp
  - vb
  name: ApplyToContext(TestExecutionContext)
  nameWithType: ScenarioAttribute.ApplyToContext(TestExecutionContext)
  fullName: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.ApplyToContext(NUnit.Framework.Internal.TestExecutionContext)
  type: Method
  source:
    path: Heleonix.Testing.NUnit
    isExternal: true
  assemblies:
  - Heleonix.Testing.NUnit
  namespace: Heleonix.Testing.NUnit.Bdd
  syntax:
    content: public void ApplyToContext(TestExecutionContext context)
    parameters:
    - id: context
      type: NUnit.Framework.Internal.TestExecutionContext
    content.vb: Public Sub ApplyToContext(context As TestExecutionContext)
  overload: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.ApplyToContext*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.#ctor
  commentId: M:Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.#ctor
  id: '#ctor'
  parent: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute
  langs:
  - csharp
  - vb
  name: ScenarioAttribute()
  nameWithType: ScenarioAttribute.ScenarioAttribute()
  fullName: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.ScenarioAttribute()
  type: Constructor
  source:
    path: Heleonix.Testing.NUnit
    isExternal: true
  assemblies:
  - Heleonix.Testing.NUnit
  namespace: Heleonix.Testing.NUnit.Bdd
  syntax:
    content: public ScenarioAttribute()
    content.vb: Public Sub New
  overload: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.Name
  commentId: P:Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.Name
  id: Name
  parent: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ScenarioAttribute.Name
  fullName: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.Name
  type: Property
  source:
    path: Heleonix.Testing.NUnit
    isExternal: true
  assemblies:
  - Heleonix.Testing.NUnit
  namespace: Heleonix.Testing.NUnit.Bdd
  summary: "\nGets or sets the name of the scenario.\n"
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe name of the scenario.\n"
    content.vb: Public Property Name As String
  overload: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.TestName
  commentId: P:Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.TestName
  id: TestName
  parent: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute
  langs:
  - csharp
  - vb
  name: TestName
  nameWithType: ScenarioAttribute.TestName
  fullName: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.TestName
  type: Property
  source:
    path: Heleonix.Testing.NUnit
    isExternal: true
  assemblies:
  - Heleonix.Testing.NUnit
  namespace: Heleonix.Testing.NUnit.Bdd
  summary: "\nGets the name of the test.\n"
  syntax:
    content: protected override string TestName { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe name of the test.\n"
    content.vb: Protected Overrides ReadOnly Property TestName As String
  overridden: Heleonix.Testing.NUnit.BaseAttribute.TestName
  overload: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.TestName*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.Properties
  commentId: P:Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.Properties
  id: Properties
  parent: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: ScenarioAttribute.Properties
  fullName: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.Properties
  type: Property
  source:
    path: Heleonix.Testing.NUnit
    isExternal: true
  assemblies:
  - Heleonix.Testing.NUnit
  namespace: Heleonix.Testing.NUnit.Bdd
  summary: "\nGets the properties.\n"
  syntax:
    content: protected override IDictionary<string, object> Properties { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "\nThe properties.\n"
    content.vb: Protected Overrides ReadOnly Property Properties As IDictionary(Of String, Object)
  overridden: Heleonix.Testing.NUnit.BaseAttribute.Properties
  overload: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.Properties*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
references:
- uid: Heleonix.Testing.NUnit.Bdd
  commentId: N:Heleonix.Testing.NUnit.Bdd
  isExternal: true
  name: Heleonix.Testing.NUnit.Bdd
  nameWithType: Heleonix.Testing.NUnit.Bdd
  fullName: Heleonix.Testing.NUnit.Bdd
- uid: Heleonix.Testing.NUnit.BaseAttribute
  commentId: T:Heleonix.Testing.NUnit.BaseAttribute
  parent: Heleonix.Testing.NUnit
  isExternal: true
  name: BaseAttribute
  nameWithType: BaseAttribute
  fullName: Heleonix.Testing.NUnit.BaseAttribute
- uid: Heleonix.Testing.NUnit.TestAttribute
  commentId: T:Heleonix.Testing.NUnit.TestAttribute
  parent: Heleonix.Testing.NUnit
  isExternal: true
  name: TestAttribute
  nameWithType: TestAttribute
  fullName: Heleonix.Testing.NUnit.TestAttribute
- uid: NUnit.Framework.Interfaces.ISimpleTestBuilder
  isExternal: true
  name: ISimpleTestBuilder
  nameWithType: ISimpleTestBuilder
  fullName: NUnit.Framework.Interfaces.ISimpleTestBuilder
- uid: NUnit.Framework.Interfaces.IApplyToContext
  isExternal: true
  name: IApplyToContext
  nameWithType: IApplyToContext
  fullName: NUnit.Framework.Interfaces.IApplyToContext
- uid: Heleonix.Testing.NUnit
  commentId: N:Heleonix.Testing.NUnit
  isExternal: true
  name: Heleonix.Testing.NUnit
  nameWithType: Heleonix.Testing.NUnit
  fullName: Heleonix.Testing.NUnit
- uid: Heleonix.Testing.NUnit.TestAttribute.BuildFrom(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.Test)
  commentId: M:Heleonix.Testing.NUnit.TestAttribute.BuildFrom(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.Test)
  parent: Heleonix.Testing.NUnit.TestAttribute
  isExternal: true
  name: BuildFrom(IMethodInfo, Test)
  nameWithType: TestAttribute.BuildFrom(IMethodInfo, Test)
  fullName: Heleonix.Testing.NUnit.TestAttribute.BuildFrom(NUnit.Framework.Interfaces.IMethodInfo, NUnit.Framework.Internal.Test)
  spec.csharp:
  - uid: Heleonix.Testing.NUnit.TestAttribute.BuildFrom(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.Test)
    name: BuildFrom
    nameWithType: TestAttribute.BuildFrom
    fullName: Heleonix.Testing.NUnit.TestAttribute.BuildFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NUnit.Framework.Interfaces.IMethodInfo
    name: IMethodInfo
    nameWithType: IMethodInfo
    fullName: NUnit.Framework.Interfaces.IMethodInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NUnit.Framework.Internal.Test
    name: Test
    nameWithType: Test
    fullName: NUnit.Framework.Internal.Test
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Heleonix.Testing.NUnit.TestAttribute.BuildFrom(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.Test)
    name: BuildFrom
    nameWithType: TestAttribute.BuildFrom
    fullName: Heleonix.Testing.NUnit.TestAttribute.BuildFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NUnit.Framework.Interfaces.IMethodInfo
    name: IMethodInfo
    nameWithType: IMethodInfo
    fullName: NUnit.Framework.Interfaces.IMethodInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NUnit.Framework.Internal.Test
    name: Test
    nameWithType: Test
    fullName: NUnit.Framework.Internal.Test
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.BuildFrom*
  commentId: Overload:Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.BuildFrom
  isExternal: true
  name: BuildFrom
  nameWithType: ScenarioAttribute.BuildFrom
  fullName: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.BuildFrom
- uid: NUnit.Framework.Interfaces.IMethodInfo
  isExternal: true
  name: IMethodInfo
  nameWithType: IMethodInfo
  fullName: NUnit.Framework.Interfaces.IMethodInfo
- uid: NUnit.Framework.Internal.Test
  isExternal: true
  name: Test
  nameWithType: Test
  fullName: NUnit.Framework.Internal.Test
- uid: NUnit.Framework.Internal.TestMethod
  isExternal: true
  name: TestMethod
  nameWithType: TestMethod
  fullName: NUnit.Framework.Internal.TestMethod
- uid: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.ApplyToContext*
  commentId: Overload:Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.ApplyToContext
  isExternal: true
  name: ApplyToContext
  nameWithType: ScenarioAttribute.ApplyToContext
  fullName: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.ApplyToContext
- uid: NUnit.Framework.Internal.TestExecutionContext
  isExternal: true
  name: TestExecutionContext
  nameWithType: TestExecutionContext
  fullName: NUnit.Framework.Internal.TestExecutionContext
- uid: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.#ctor*
  commentId: Overload:Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.#ctor
  isExternal: true
  name: ScenarioAttribute
  nameWithType: ScenarioAttribute.ScenarioAttribute
  fullName: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.ScenarioAttribute
- uid: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.Name*
  commentId: Overload:Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.Name
  isExternal: true
  name: Name
  nameWithType: ScenarioAttribute.Name
  fullName: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Heleonix.Testing.NUnit.BaseAttribute.TestName
  commentId: P:Heleonix.Testing.NUnit.BaseAttribute.TestName
  parent: Heleonix.Testing.NUnit.BaseAttribute
  isExternal: true
  name: TestName
  nameWithType: BaseAttribute.TestName
  fullName: Heleonix.Testing.NUnit.BaseAttribute.TestName
- uid: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.TestName*
  commentId: Overload:Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.TestName
  isExternal: true
  name: TestName
  nameWithType: ScenarioAttribute.TestName
  fullName: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.TestName
- uid: Heleonix.Testing.NUnit.BaseAttribute.Properties
  commentId: P:Heleonix.Testing.NUnit.BaseAttribute.Properties
  parent: Heleonix.Testing.NUnit.BaseAttribute
  isExternal: true
  name: Properties
  nameWithType: BaseAttribute.Properties
  fullName: Heleonix.Testing.NUnit.BaseAttribute.Properties
- uid: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.Properties*
  commentId: Overload:Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.Properties
  isExternal: true
  name: Properties
  nameWithType: ScenarioAttribute.Properties
  fullName: Heleonix.Testing.NUnit.Bdd.ScenarioAttribute.Properties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: '!:System.Collections.Generic.IDictionary{System.String,System.Object}'
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: System.Collections.Generic.IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullName.vb: System.Collections.Generic.IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
