### YamlMime:ManagedReference
items:
- uid: Heleonix.Extensions.StringExtensions
  commentId: T:Heleonix.Extensions.StringExtensions
  id: StringExtensions
  parent: Heleonix.Extensions
  children:
  - Heleonix.Extensions.StringExtensions.FormatWith(System.String,System.IFormatProvider,System.Object[])
  - Heleonix.Extensions.StringExtensions.FormatWith(System.String,System.Object[])
  - Heleonix.Extensions.StringExtensions.IsNullOrEmptyOrWhiteSpace(System.String)
  langs:
  - csharp
  - vb
  name: StringExtensions
  nameWithType: StringExtensions
  fullName: Heleonix.Extensions.StringExtensions
  type: Class
  assemblies:
  - Heleonix.Extensions
  namespace: Heleonix.Extensions
  summary: Provides functionality to work with strings.
  example: []
  syntax:
    content: public static class StringExtensions
    content.vb: Public Module StringExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: Heleonix.Extensions.StringExtensions.FormatWith(System.String,System.Object[])
  commentId: M:Heleonix.Extensions.StringExtensions.FormatWith(System.String,System.Object[])
  id: FormatWith(System.String,System.Object[])
  isExtensionMethod: true
  parent: Heleonix.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: FormatWith(string, params object[])
  nameWithType: StringExtensions.FormatWith(string, params object[])
  fullName: Heleonix.Extensions.StringExtensions.FormatWith(string, params object[])
  type: Method
  assemblies:
  - Heleonix.Extensions
  namespace: Heleonix.Extensions
  summary: Formats the specified format string with the specified arguments.
  example:
  - >-
    var str = "{0} plus {1} equals {2}".FormatWith(1, 2, 3);


    // "1 plus 2 equals 3".
  syntax:
    content: public static string FormatWith(this string format, params object[] args)
    parameters:
    - id: format
      type: System.String
      description: The format.
    - id: args
      type: System.Object[]
      description: The arguments.
    return:
      type: System.String
      description: Formatted string or empty string if <code class="paramref">format</code> is not specified.
    content.vb: Public Shared Function FormatWith(format As String, ParamArray args As Object()) As String
  overload: Heleonix.Extensions.StringExtensions.FormatWith*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: >-
      <code class="paramref">format</code> is invalid or the index of a format item

      is less than zero, or greater than or equal to the length of the

      <code class="paramref">args</code> array.
  nameWithType.vb: StringExtensions.FormatWith(String, ParamArray Object())
  fullName.vb: Heleonix.Extensions.StringExtensions.FormatWith(String, ParamArray Object())
  name.vb: FormatWith(String, ParamArray Object())
- uid: Heleonix.Extensions.StringExtensions.FormatWith(System.String,System.IFormatProvider,System.Object[])
  commentId: M:Heleonix.Extensions.StringExtensions.FormatWith(System.String,System.IFormatProvider,System.Object[])
  id: FormatWith(System.String,System.IFormatProvider,System.Object[])
  isExtensionMethod: true
  parent: Heleonix.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: FormatWith(string, IFormatProvider, params object[])
  nameWithType: StringExtensions.FormatWith(string, IFormatProvider, params object[])
  fullName: Heleonix.Extensions.StringExtensions.FormatWith(string, System.IFormatProvider, params object[])
  type: Method
  assemblies:
  - Heleonix.Extensions
  namespace: Heleonix.Extensions
  summary: Formats the specified format string with the specified arguments using a specified format provider.
  example: []
  syntax:
    content: public static string FormatWith(this string format, IFormatProvider formatProvider, params object[] args)
    parameters:
    - id: format
      type: System.String
      description: The format.
    - id: formatProvider
      type: System.IFormatProvider
      description: The format provider.
    - id: args
      type: System.Object[]
      description: The arguments.
    return:
      type: System.String
      description: Formatted string or empty string if <code class="paramref">format</code> is not specified.
    content.vb: Public Shared Function FormatWith(format As String, formatProvider As IFormatProvider, ParamArray args As Object()) As String
  overload: Heleonix.Extensions.StringExtensions.FormatWith*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code class="paramref">formatProvider</code> is <code>null</code>.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: >-
      <code class="paramref">format</code> is invalid the index of a format item

      is less than zero, or greater than or equal to the length of the

      <code class="paramref">args</code> array.
  nameWithType.vb: StringExtensions.FormatWith(String, IFormatProvider, ParamArray Object())
  fullName.vb: Heleonix.Extensions.StringExtensions.FormatWith(String, System.IFormatProvider, ParamArray Object())
  name.vb: FormatWith(String, IFormatProvider, ParamArray Object())
- uid: Heleonix.Extensions.StringExtensions.IsNullOrEmptyOrWhiteSpace(System.String)
  commentId: M:Heleonix.Extensions.StringExtensions.IsNullOrEmptyOrWhiteSpace(System.String)
  id: IsNullOrEmptyOrWhiteSpace(System.String)
  isExtensionMethod: true
  parent: Heleonix.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: IsNullOrEmptyOrWhiteSpace(string)
  nameWithType: StringExtensions.IsNullOrEmptyOrWhiteSpace(string)
  fullName: Heleonix.Extensions.StringExtensions.IsNullOrEmptyOrWhiteSpace(string)
  type: Method
  assemblies:
  - Heleonix.Extensions
  namespace: Heleonix.Extensions
  summary: Determines whether this instance is <code>null</code> or empty or whitespace.
  example: []
  syntax:
    content: public static bool IsNullOrEmptyOrWhiteSpace(this string instance)
    parameters:
    - id: instance
      type: System.String
      description: The instance.
    return:
      type: System.Boolean
      description: <code>true</code> if this instance is <code>null</code> or empty or whitespace, otherwise, <code>false</code>.
    content.vb: Public Shared Function IsNullOrEmptyOrWhiteSpace(instance As String) As Boolean
  overload: Heleonix.Extensions.StringExtensions.IsNullOrEmptyOrWhiteSpace*
  nameWithType.vb: StringExtensions.IsNullOrEmptyOrWhiteSpace(String)
  fullName.vb: Heleonix.Extensions.StringExtensions.IsNullOrEmptyOrWhiteSpace(String)
  name.vb: IsNullOrEmptyOrWhiteSpace(String)
references:
- uid: Heleonix.Extensions
  commentId: N:Heleonix.Extensions
  isExternal: true
  href: Heleonix.html
  name: Heleonix.Extensions
  nameWithType: Heleonix.Extensions
  fullName: Heleonix.Extensions
  spec.csharp:
  - uid: Heleonix
    name: Heleonix
    isExternal: true
    href: Heleonix.html
  - name: .
  - uid: Heleonix.Extensions
    name: Extensions
    isExternal: true
    href: Heleonix.Extensions.html
  spec.vb:
  - uid: Heleonix
    name: Heleonix
    isExternal: true
    href: Heleonix.html
  - name: .
  - uid: Heleonix.Extensions
    name: Extensions
    isExternal: true
    href: Heleonix.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.FormatException
  commentId: T:System.FormatException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.formatexception
  name: FormatException
  nameWithType: FormatException
  fullName: System.FormatException
- uid: Heleonix.Extensions.StringExtensions.FormatWith*
  commentId: Overload:Heleonix.Extensions.StringExtensions.FormatWith
  isExternal: true
  href: Heleonix.Extensions.StringExtensions.html#Heleonix_Extensions_StringExtensions_FormatWith_System_String_System_Object___
  name: FormatWith
  nameWithType: StringExtensions.FormatWith
  fullName: Heleonix.Extensions.StringExtensions.FormatWith
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: Heleonix.Extensions.StringExtensions.IsNullOrEmptyOrWhiteSpace*
  commentId: Overload:Heleonix.Extensions.StringExtensions.IsNullOrEmptyOrWhiteSpace
  isExternal: true
  href: Heleonix.Extensions.StringExtensions.html#Heleonix_Extensions_StringExtensions_IsNullOrEmptyOrWhiteSpace_System_String_
  name: IsNullOrEmptyOrWhiteSpace
  nameWithType: StringExtensions.IsNullOrEmptyOrWhiteSpace
  fullName: Heleonix.Extensions.StringExtensions.IsNullOrEmptyOrWhiteSpace
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
