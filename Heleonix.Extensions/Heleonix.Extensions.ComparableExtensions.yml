### YamlMime:ManagedReference
items:
- uid: Heleonix.Extensions.ComparableExtensions
  commentId: T:Heleonix.Extensions.ComparableExtensions
  id: ComparableExtensions
  parent: Heleonix.Extensions
  children:
  - Heleonix.Extensions.ComparableExtensions.IsBetween``1(System.IComparable{``0},``0,``0)
  - Heleonix.Extensions.ComparableExtensions.IsGreaterThanOrEqualTo``1(System.IComparable{``0},``0)
  - Heleonix.Extensions.ComparableExtensions.IsGreaterThan``1(System.IComparable{``0},``0)
  - Heleonix.Extensions.ComparableExtensions.IsInRange``1(System.IComparable{``0},``0,``0)
  - Heleonix.Extensions.ComparableExtensions.IsLessThanOrEqualTo``1(System.IComparable{``0},``0)
  - Heleonix.Extensions.ComparableExtensions.IsLessThan``1(System.IComparable{``0},``0)
  langs:
  - csharp
  - vb
  name: ComparableExtensions
  nameWithType: ComparableExtensions
  fullName: Heleonix.Extensions.ComparableExtensions
  type: Class
  assemblies:
  - Heleonix.Extensions
  namespace: Heleonix.Extensions
  summary: Provides functionality to work with comparables.
  example: []
  syntax:
    content: public static class ComparableExtensions
    content.vb: Public Module ComparableExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: Heleonix.Extensions.ComparableExtensions.IsLessThan``1(System.IComparable{``0},``0)
  commentId: M:Heleonix.Extensions.ComparableExtensions.IsLessThan``1(System.IComparable{``0},``0)
  id: IsLessThan``1(System.IComparable{``0},``0)
  isExtensionMethod: true
  parent: Heleonix.Extensions.ComparableExtensions
  langs:
  - csharp
  - vb
  name: IsLessThan<T>(IComparable<T>, T)
  nameWithType: ComparableExtensions.IsLessThan<T>(IComparable<T>, T)
  fullName: Heleonix.Extensions.ComparableExtensions.IsLessThan<T>(System.IComparable<T>, T)
  type: Method
  assemblies:
  - Heleonix.Extensions
  namespace: Heleonix.Extensions
  summary: Determines whether this instance is less than the provided value.
  example: []
  syntax:
    content: public static bool IsLessThan<T>(this IComparable<T> instance, T value)
    parameters:
    - id: instance
      type: System.IComparable{{T}}
      description: The instance.
    - id: value
      type: '{T}'
      description: The value to compare with.
    typeParameters:
    - id: T
      description: A type of a comparable instance.
    return:
      type: System.Boolean
      description: <code>true</code> if this instance is less than the provided value, otherwise <code>false</code>.
    content.vb: Public Shared Function IsLessThan(Of T)(instance As IComparable(Of T), value As T) As Boolean
  overload: Heleonix.Extensions.ComparableExtensions.IsLessThan*
  nameWithType.vb: ComparableExtensions.IsLessThan(Of T)(IComparable(Of T), T)
  fullName.vb: Heleonix.Extensions.ComparableExtensions.IsLessThan(Of T)(System.IComparable(Of T), T)
  name.vb: IsLessThan(Of T)(IComparable(Of T), T)
- uid: Heleonix.Extensions.ComparableExtensions.IsLessThanOrEqualTo``1(System.IComparable{``0},``0)
  commentId: M:Heleonix.Extensions.ComparableExtensions.IsLessThanOrEqualTo``1(System.IComparable{``0},``0)
  id: IsLessThanOrEqualTo``1(System.IComparable{``0},``0)
  isExtensionMethod: true
  parent: Heleonix.Extensions.ComparableExtensions
  langs:
  - csharp
  - vb
  name: IsLessThanOrEqualTo<T>(IComparable<T>, T)
  nameWithType: ComparableExtensions.IsLessThanOrEqualTo<T>(IComparable<T>, T)
  fullName: Heleonix.Extensions.ComparableExtensions.IsLessThanOrEqualTo<T>(System.IComparable<T>, T)
  type: Method
  assemblies:
  - Heleonix.Extensions
  namespace: Heleonix.Extensions
  summary: Determines whether this instance is less than or equals to the provided value.
  example: []
  syntax:
    content: public static bool IsLessThanOrEqualTo<T>(this IComparable<T> instance, T value)
    parameters:
    - id: instance
      type: System.IComparable{{T}}
      description: The instance.
    - id: value
      type: '{T}'
      description: The value to compare with.
    typeParameters:
    - id: T
      description: A type of a comparable instance.
    return:
      type: System.Boolean
      description: <code>true</code> if this instance is less than or equals to the provided value, otherwise <code>false</code>.
    content.vb: Public Shared Function IsLessThanOrEqualTo(Of T)(instance As IComparable(Of T), value As T) As Boolean
  overload: Heleonix.Extensions.ComparableExtensions.IsLessThanOrEqualTo*
  nameWithType.vb: ComparableExtensions.IsLessThanOrEqualTo(Of T)(IComparable(Of T), T)
  fullName.vb: Heleonix.Extensions.ComparableExtensions.IsLessThanOrEqualTo(Of T)(System.IComparable(Of T), T)
  name.vb: IsLessThanOrEqualTo(Of T)(IComparable(Of T), T)
- uid: Heleonix.Extensions.ComparableExtensions.IsGreaterThan``1(System.IComparable{``0},``0)
  commentId: M:Heleonix.Extensions.ComparableExtensions.IsGreaterThan``1(System.IComparable{``0},``0)
  id: IsGreaterThan``1(System.IComparable{``0},``0)
  isExtensionMethod: true
  parent: Heleonix.Extensions.ComparableExtensions
  langs:
  - csharp
  - vb
  name: IsGreaterThan<T>(IComparable<T>, T)
  nameWithType: ComparableExtensions.IsGreaterThan<T>(IComparable<T>, T)
  fullName: Heleonix.Extensions.ComparableExtensions.IsGreaterThan<T>(System.IComparable<T>, T)
  type: Method
  assemblies:
  - Heleonix.Extensions
  namespace: Heleonix.Extensions
  summary: Determines whether this instance is greater than the provided value.
  example: []
  syntax:
    content: public static bool IsGreaterThan<T>(this IComparable<T> instance, T value)
    parameters:
    - id: instance
      type: System.IComparable{{T}}
      description: The instance.
    - id: value
      type: '{T}'
      description: The value to compare with.
    typeParameters:
    - id: T
      description: A type of a comparable instance.
    return:
      type: System.Boolean
      description: <code>true</code> if this instance is greater than the provided value, otherwise <code>false</code>.
    content.vb: Public Shared Function IsGreaterThan(Of T)(instance As IComparable(Of T), value As T) As Boolean
  overload: Heleonix.Extensions.ComparableExtensions.IsGreaterThan*
  nameWithType.vb: ComparableExtensions.IsGreaterThan(Of T)(IComparable(Of T), T)
  fullName.vb: Heleonix.Extensions.ComparableExtensions.IsGreaterThan(Of T)(System.IComparable(Of T), T)
  name.vb: IsGreaterThan(Of T)(IComparable(Of T), T)
- uid: Heleonix.Extensions.ComparableExtensions.IsGreaterThanOrEqualTo``1(System.IComparable{``0},``0)
  commentId: M:Heleonix.Extensions.ComparableExtensions.IsGreaterThanOrEqualTo``1(System.IComparable{``0},``0)
  id: IsGreaterThanOrEqualTo``1(System.IComparable{``0},``0)
  isExtensionMethod: true
  parent: Heleonix.Extensions.ComparableExtensions
  langs:
  - csharp
  - vb
  name: IsGreaterThanOrEqualTo<T>(IComparable<T>, T)
  nameWithType: ComparableExtensions.IsGreaterThanOrEqualTo<T>(IComparable<T>, T)
  fullName: Heleonix.Extensions.ComparableExtensions.IsGreaterThanOrEqualTo<T>(System.IComparable<T>, T)
  type: Method
  assemblies:
  - Heleonix.Extensions
  namespace: Heleonix.Extensions
  summary: Determines whether this instance is greater than or equals to the provided value.
  example: []
  syntax:
    content: public static bool IsGreaterThanOrEqualTo<T>(this IComparable<T> instance, T value)
    parameters:
    - id: instance
      type: System.IComparable{{T}}
      description: The instance.
    - id: value
      type: '{T}'
      description: The value to compare with.
    typeParameters:
    - id: T
      description: A type of a comparable instance.
    return:
      type: System.Boolean
      description: <code>true</code> if this instance is greater than or equals to the provided value, otherwise <code>false</code>.
    content.vb: Public Shared Function IsGreaterThanOrEqualTo(Of T)(instance As IComparable(Of T), value As T) As Boolean
  overload: Heleonix.Extensions.ComparableExtensions.IsGreaterThanOrEqualTo*
  nameWithType.vb: ComparableExtensions.IsGreaterThanOrEqualTo(Of T)(IComparable(Of T), T)
  fullName.vb: Heleonix.Extensions.ComparableExtensions.IsGreaterThanOrEqualTo(Of T)(System.IComparable(Of T), T)
  name.vb: IsGreaterThanOrEqualTo(Of T)(IComparable(Of T), T)
- uid: Heleonix.Extensions.ComparableExtensions.IsInRange``1(System.IComparable{``0},``0,``0)
  commentId: M:Heleonix.Extensions.ComparableExtensions.IsInRange``1(System.IComparable{``0},``0,``0)
  id: IsInRange``1(System.IComparable{``0},``0,``0)
  isExtensionMethod: true
  parent: Heleonix.Extensions.ComparableExtensions
  langs:
  - csharp
  - vb
  name: IsInRange<T>(IComparable<T>, T, T)
  nameWithType: ComparableExtensions.IsInRange<T>(IComparable<T>, T, T)
  fullName: Heleonix.Extensions.ComparableExtensions.IsInRange<T>(System.IComparable<T>, T, T)
  type: Method
  assemblies:
  - Heleonix.Extensions
  namespace: Heleonix.Extensions
  summary: Determines whether this instance is in range (inclusive) of the provided values.
  example: []
  syntax:
    content: public static bool IsInRange<T>(this IComparable<T> instance, T min, T max)
    parameters:
    - id: instance
      type: System.IComparable{{T}}
      description: The instance.
    - id: min
      type: '{T}'
      description: The minimal value to compare with.
    - id: max
      type: '{T}'
      description: The maximum value to compare with.
    typeParameters:
    - id: T
      description: A type of a comparable instance.
    return:
      type: System.Boolean
      description: <code>true</code> if this instance is in range of the provided values, otherwise <code>false</code>.
    content.vb: Public Shared Function IsInRange(Of T)(instance As IComparable(Of T), min As T, max As T) As Boolean
  overload: Heleonix.Extensions.ComparableExtensions.IsInRange*
  nameWithType.vb: ComparableExtensions.IsInRange(Of T)(IComparable(Of T), T, T)
  fullName.vb: Heleonix.Extensions.ComparableExtensions.IsInRange(Of T)(System.IComparable(Of T), T, T)
  name.vb: IsInRange(Of T)(IComparable(Of T), T, T)
- uid: Heleonix.Extensions.ComparableExtensions.IsBetween``1(System.IComparable{``0},``0,``0)
  commentId: M:Heleonix.Extensions.ComparableExtensions.IsBetween``1(System.IComparable{``0},``0,``0)
  id: IsBetween``1(System.IComparable{``0},``0,``0)
  isExtensionMethod: true
  parent: Heleonix.Extensions.ComparableExtensions
  langs:
  - csharp
  - vb
  name: IsBetween<T>(IComparable<T>, T, T)
  nameWithType: ComparableExtensions.IsBetween<T>(IComparable<T>, T, T)
  fullName: Heleonix.Extensions.ComparableExtensions.IsBetween<T>(System.IComparable<T>, T, T)
  type: Method
  assemblies:
  - Heleonix.Extensions
  namespace: Heleonix.Extensions
  summary: Determines whether this instance is between (exclusive) the provided values.
  example: []
  syntax:
    content: public static bool IsBetween<T>(this IComparable<T> instance, T min, T max)
    parameters:
    - id: instance
      type: System.IComparable{{T}}
      description: The instance.
    - id: min
      type: '{T}'
      description: The minimal value to compare with.
    - id: max
      type: '{T}'
      description: The maximum value to compare with.
    typeParameters:
    - id: T
      description: A type of a comparable instance.
    return:
      type: System.Boolean
      description: <code>true</code> if this instance is between the provided values, otherwise <code>false</code>.
    content.vb: Public Shared Function IsBetween(Of T)(instance As IComparable(Of T), min As T, max As T) As Boolean
  overload: Heleonix.Extensions.ComparableExtensions.IsBetween*
  nameWithType.vb: ComparableExtensions.IsBetween(Of T)(IComparable(Of T), T, T)
  fullName.vb: Heleonix.Extensions.ComparableExtensions.IsBetween(Of T)(System.IComparable(Of T), T, T)
  name.vb: IsBetween(Of T)(IComparable(Of T), T, T)
references:
- uid: Heleonix.Extensions
  commentId: N:Heleonix.Extensions
  isExternal: true
  href: Heleonix.html
  name: Heleonix.Extensions
  nameWithType: Heleonix.Extensions
  fullName: Heleonix.Extensions
  spec.csharp:
  - uid: Heleonix
    name: Heleonix
    isExternal: true
    href: Heleonix.html
  - name: .
  - uid: Heleonix.Extensions
    name: Extensions
    isExternal: true
    href: Heleonix.Extensions.html
  spec.vb:
  - uid: Heleonix
    name: Heleonix
    isExternal: true
    href: Heleonix.html
  - name: .
  - uid: Heleonix.Extensions
    name: Extensions
    isExternal: true
    href: Heleonix.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Heleonix.Extensions.ComparableExtensions.IsLessThan*
  commentId: Overload:Heleonix.Extensions.ComparableExtensions.IsLessThan
  isExternal: true
  href: Heleonix.Extensions.ComparableExtensions.html#Heleonix_Extensions_ComparableExtensions_IsLessThan__1_System_IComparable___0____0_
  name: IsLessThan
  nameWithType: ComparableExtensions.IsLessThan
  fullName: Heleonix.Extensions.ComparableExtensions.IsLessThan
- uid: System.IComparable{{T}}
  commentId: T:System.IComparable{``0}
  parent: System
  definition: System.IComparable`1
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Heleonix.Extensions.ComparableExtensions.IsLessThanOrEqualTo*
  commentId: Overload:Heleonix.Extensions.ComparableExtensions.IsLessThanOrEqualTo
  isExternal: true
  href: Heleonix.Extensions.ComparableExtensions.html#Heleonix_Extensions_ComparableExtensions_IsLessThanOrEqualTo__1_System_IComparable___0____0_
  name: IsLessThanOrEqualTo
  nameWithType: ComparableExtensions.IsLessThanOrEqualTo
  fullName: Heleonix.Extensions.ComparableExtensions.IsLessThanOrEqualTo
- uid: Heleonix.Extensions.ComparableExtensions.IsGreaterThan*
  commentId: Overload:Heleonix.Extensions.ComparableExtensions.IsGreaterThan
  isExternal: true
  href: Heleonix.Extensions.ComparableExtensions.html#Heleonix_Extensions_ComparableExtensions_IsGreaterThan__1_System_IComparable___0____0_
  name: IsGreaterThan
  nameWithType: ComparableExtensions.IsGreaterThan
  fullName: Heleonix.Extensions.ComparableExtensions.IsGreaterThan
- uid: Heleonix.Extensions.ComparableExtensions.IsGreaterThanOrEqualTo*
  commentId: Overload:Heleonix.Extensions.ComparableExtensions.IsGreaterThanOrEqualTo
  isExternal: true
  href: Heleonix.Extensions.ComparableExtensions.html#Heleonix_Extensions_ComparableExtensions_IsGreaterThanOrEqualTo__1_System_IComparable___0____0_
  name: IsGreaterThanOrEqualTo
  nameWithType: ComparableExtensions.IsGreaterThanOrEqualTo
  fullName: Heleonix.Extensions.ComparableExtensions.IsGreaterThanOrEqualTo
- uid: Heleonix.Extensions.ComparableExtensions.IsInRange*
  commentId: Overload:Heleonix.Extensions.ComparableExtensions.IsInRange
  isExternal: true
  href: Heleonix.Extensions.ComparableExtensions.html#Heleonix_Extensions_ComparableExtensions_IsInRange__1_System_IComparable___0____0___0_
  name: IsInRange
  nameWithType: ComparableExtensions.IsInRange
  fullName: Heleonix.Extensions.ComparableExtensions.IsInRange
- uid: Heleonix.Extensions.ComparableExtensions.IsBetween*
  commentId: Overload:Heleonix.Extensions.ComparableExtensions.IsBetween
  isExternal: true
  href: Heleonix.Extensions.ComparableExtensions.html#Heleonix_Extensions_ComparableExtensions_IsBetween__1_System_IComparable___0____0___0_
  name: IsBetween
  nameWithType: ComparableExtensions.IsBetween
  fullName: Heleonix.Extensions.ComparableExtensions.IsBetween
